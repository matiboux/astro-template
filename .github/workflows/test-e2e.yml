name: Test E2E CI

on:

  # Run on pull requests to primary branches
  pull_request:
    branches:
      # Production
      - main
      - master
      - prod
      - production
      # Staging
      - staging
      - preprod
      - preproduction
      # Development
      - dev
      - develop
      - development
      - test
    paths:
      # CI files
      - '.github/workflows/test-e2e.yml'
      - 'docker-compose.yml'
      - 'docker-compose.test:e2e.yml'
      - '.env'
      # Application files
      - 'app/**'

  # Run on manual triggers
  workflow_dispatch:

# Set GITHUB_TOKEN permissions for the workflow
permissions:
  contents: read

# Set workflow concurrency rules
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  # Test job
  test-e2e:
    name: Test E2E
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:

      # Steps dependencies

      - name: Checkout
        uses: actions/checkout@v4

      # Execution steps

      - name: Pull dependencies
        run: |
          # docker compose pull --ignore-buildable
          docker compose \
            -f ./docker-compose.yml -f ./docker-compose.test:e2e.yml \
            --env-file .env \
            pull app --ignore-buildable

      - name: Build for production
        env:
          GITHUB_REPOSITORY_URL: https://github.com/${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}
          BUILD_CHECK: "true" # Run type checks
        run: |
          # docker compose build
          export DOCKER_UID="$(id -u)"
          docker compose \
            -f ./docker-compose.yml -f ./docker-compose.test:e2e.yml \
            --env-file .env \
            build app

      - name: Copy application files
        run: |
          # docker compose up
          export DOCKER_UID="$(id -u)"
          docker compose \
            -f ./docker-compose.yml -f ./docker-compose.test:e2e.yml \
            --env-file .env \
            up app --no-log-prefix

      - name: Check application files
        run: |
          # Check application files
          [ -d ./app/dist ] && [ $(ls -1 ./app/dist | wc -l) -gt 0 ] \
            && echo "Application files found" \
            || ( echo "No application files found" && exit 1 )
