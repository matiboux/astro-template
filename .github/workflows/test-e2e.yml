name: Test E2E CI

on:

  # Run on pull requests to primary branches
  pull_request:
    branches:
      # Production
      - main
      - master
      - prod
      - production
      # Staging
      - staging
      - preprod
      - preproduction
      # Development
      - dev
      - develop
      - development
      - test
    paths:
      # CI files
      - '.github/workflows/test-e2e.yml'
      - 'docker-compose.yml'
      - 'docker-compose.test:e2e.yml'
      - '.env'
      # Application files
      - 'app/**'

  # Run on manual triggers
  workflow_dispatch:

# Set GITHUB_TOKEN permissions for the workflow
permissions:
  contents: read

# Set workflow concurrency rules
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  # Test job
  test-e2e:
    name: Test E2E
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:

      # Steps dependencies

      - name: Checkout
        uses: actions/checkout@v4

      # Execution steps

      - name: Pull dependencies
        run: |
          # docker compose pull --ignore-buildable
          docker compose \
            -f ./docker-compose.yml -f ./docker-compose.test:e2e.yml \
            --env-file .env \
            pull --ignore-buildable

      - name: Build for E2E tests
        env:
          GITHUB_REPOSITORY_URL: https://github.com/${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          # docker compose build
          export DOCKER_UID="$(id -u)"
          docker compose \
            -f ./docker-compose.yml -f ./docker-compose.test:e2e.yml \
            --env-file .env \
            build

      - name: Start E2E tests
        run: |
          # docker compose up
          export DOCKER_UID="$(id -u)"
          docker compose \
            -f ./docker-compose.yml -f ./docker-compose.test:e2e.yml \
            --env-file .env \
            up -d

      - name: List E2E tests services
        run: |
          # Set DOCKER_SERVICES environment variable
          DOCKER_SERVICES="$(
            docker compose \
              -f ./docker-compose.yml -f ./docker-compose.test:e2e.yml \
              --env-file .env \
              config --services
          )"
          echo "Set DOCKER_SERVICES to '${DOCKER_SERVICES}'"
          echo "DOCKER_SERVICES<<GITHUB_ENV_EOF" >> $GITHUB_ENV
          echo "${DOCKER_SERVICES}" >> $GITHUB_ENV
          echo 'GITHUB_ENV_EOF' >> $GITHUB_ENV

      - name: Wait for E2E tests to finish
        env:
          DOCKER_SERVICES: ${{ env.DOCKER_SERVICES }}
        run: |
          # docker compose wait
          docker compose \
            -f ./docker-compose.yml -f ./docker-compose.test:e2e.yml \
            --env-file .env \
            wait $DOCKER_SERVICES \
            || exit 0

      - name: Print E2E tests logs
        env:
          DOCKER_SERVICES: ${{ env.DOCKER_SERVICES }}
        run: |
          # docker compose logs
          for SERVICE in $DOCKER_SERVICES; do
            echo "::group::Docker logs for service '${SERVICE}'"
            docker compose \
              -f ./docker-compose.yml -f ./docker-compose.test:e2e.yml \
              --env-file .env \
              logs --no-log-prefix $SERVICE
            echo "::endgroup::"
          done
